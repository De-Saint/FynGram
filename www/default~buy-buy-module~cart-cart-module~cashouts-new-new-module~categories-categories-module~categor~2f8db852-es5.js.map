{"version":3,"sources":["webpack:///src/app/home/service/shop.service.ts"],"names":["ShopService","http","authService","platform","url","type","is","data","nativeHttpRequest","JSON","stringify","post","pipe","res","catid","productid","option","price","quantity","action","sid","currentUserDataValue","code","paytype","shiptypeid","addressid","optionid","amount","refcode","tcode","searchvalue","providedIn"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAcaA,WAAW;AAEtB,6BACUC,IADV,EAEUC,WAFV,EAEmDC,QAFnD,EAEqE;AAAA;;AAD3D,eAAAF,IAAA,GAAAA,IAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AAAyC,eAAAC,QAAA,GAAAA,QAAA;AAGlD;;AAPqB;AAAA;AAAA,0CAST;AACX,gBAAMC,GAAG,GAAG,sEAAYA,GAAZ,GAAkB,cAA9B;AACA,gBAAMC,IAAI,GAAG,mBAAb;;AACA,gBAAI,KAAKF,QAAL,CAAcG,EAAd,CAAiB,SAAjB,CAAJ,EAAiC;AAC/B,kBAAMC,IAAI,GAAG;AACXF,oBAAI,EAAJA;AADW,eAAb;AAGA,qBAAO,KAAKH,WAAL,CAAiBM,iBAAjB,CAAmCJ,GAAnC,EAAwCG,IAAxC,CAAP;AACD,aALD,MAKO;AACL,kBAAMA,KAAI,GAAGE,IAAI,CAACC,SAAL,CAAe;AAAEL,oBAAI,EAAJA;AAAF,eAAf,CAAb;;AACA,qBAAO,KAAKJ,IAAL,CAAUU,IAAV,CAA6BP,GAA7B,EAAkCG,KAAlC,EAAwCK,IAAxC,CACL,2DAAI,UAAAC,GAAG,EAAI;AACT,uBAAOA,GAAP;AACD,eAFD,CADK,CAAP;AAKD;AACF;AAzBqB;AAAA;AAAA,kDA2BD;AACnB,gBAAMT,GAAG,GAAG,sEAAYA,GAAZ,GAAkB,cAA9B;AACA,gBAAMC,IAAI,GAAG,uBAAb;;AACA,gBAAI,KAAKF,QAAL,CAAcG,EAAd,CAAiB,SAAjB,CAAJ,EAAiC;AAC/B,kBAAMC,IAAI,GAAG;AACXF,oBAAI,EAAJA;AADW,eAAb;AAGA,qBAAO,KAAKH,WAAL,CAAiBM,iBAAjB,CAAmCJ,GAAnC,EAAwCG,IAAxC,CAAP;AACD,aALD,MAKO;AACL,kBAAMA,MAAI,GAAGE,IAAI,CAACC,SAAL,CAAe;AAAEL,oBAAI,EAAJA;AAAF,eAAf,CAAb;;AACA,qBAAO,KAAKJ,IAAL,CAAUU,IAAV,CAA6BP,GAA7B,EAAkCG,MAAlC,EAAwCK,IAAxC,CACL,2DAAI,UAAAC,GAAG,EAAI;AACT,uBAAOA,GAAP;AACD,eAFD,CADK,CAAP;AAKD;AACF;AA3CqB;AAAA;AAAA,qDA4CE;AACtB,gBAAMT,GAAG,GAAG,sEAAYA,GAAZ,GAAkB,cAA9B;AACA,gBAAMC,IAAI,GAAG,0BAAb;;AACA,gBAAI,KAAKF,QAAL,CAAcG,EAAd,CAAiB,SAAjB,CAAJ,EAAiC;AAC/B,kBAAMC,IAAI,GAAG;AACXF,oBAAI,EAAJA;AADW,eAAb;AAGA,qBAAO,KAAKH,WAAL,CAAiBM,iBAAjB,CAAmCJ,GAAnC,EAAwCG,IAAxC,CAAP;AACD,aALD,MAKO;AACL,kBAAMA,MAAI,GAAGE,IAAI,CAACC,SAAL,CAAe;AAAEL,oBAAI,EAAJA;AAAF,eAAf,CAAb;;AACA,qBAAO,KAAKJ,IAAL,CAAUU,IAAV,CAA6BP,GAA7B,EAAkCG,MAAlC,EAAwCK,IAAxC,CACL,2DAAI,UAAAC,GAAG,EAAI;AACT,uBAAOA,GAAP;AACD,eAFD,CADK,CAAP;AAKD;AACF;AA5DqB;AAAA;AAAA,gDA6DH;AACjB,gBAAMT,GAAG,GAAG,sEAAYA,GAAZ,GAAkB,cAA9B;AACA,gBAAMC,IAAI,GAAG,qBAAb;;AACA,gBAAI,KAAKF,QAAL,CAAcG,EAAd,CAAiB,SAAjB,CAAJ,EAAiC;AAC/B,kBAAMC,IAAI,GAAG;AACXF,oBAAI,EAAJA;AADW,eAAb;AAGA,qBAAO,KAAKH,WAAL,CAAiBM,iBAAjB,CAAmCJ,GAAnC,EAAwCG,IAAxC,CAAP;AACD,aALD,MAKO;AACL,kBAAMA,MAAI,GAAGE,IAAI,CAACC,SAAL,CAAe;AAAEL,oBAAI,EAAJA;AAAF,eAAf,CAAb;;AACA,qBAAO,KAAKJ,IAAL,CAAUU,IAAV,CAA6BP,GAA7B,EAAkCG,MAAlC,EAAwCK,IAAxC,CACL,2DAAI,UAAAC,GAAG,EAAI;AACT,uBAAOA,GAAP;AACD,eAFD,CADK,CAAP;AAKD;AACF;AA7EqB;AAAA;AAAA,0CA+ET;AACX,gBAAMT,GAAG,GAAG,sEAAYA,GAAZ,GAAkB,cAA9B;AACA,gBAAMC,IAAI,GAAG,eAAb;;AACA,gBAAI,KAAKF,QAAL,CAAcG,EAAd,CAAiB,SAAjB,CAAJ,EAAiC;AAC/B,kBAAMC,IAAI,GAAG;AACXF,oBAAI,EAAJA;AADW,eAAb;AAGA,qBAAO,KAAKH,WAAL,CAAiBM,iBAAjB,CAAmCJ,GAAnC,EAAwCG,IAAxC,CAAP;AACD,aALD,MAKO;AACL,kBAAMA,MAAI,GAAGE,IAAI,CAACC,SAAL,CAAe;AAAEL,oBAAI,EAAJA;AAAF,eAAf,CAAb;;AACA,qBAAO,KAAKJ,IAAL,CAAUU,IAAV,CAA6BP,GAA7B,EAAkCG,MAAlC,EAAwCK,IAAxC,CACL,2DAAI,UAAAC,GAAG,EAAI;AACT,uBAAOA,GAAP;AACD,eAFD,CADK,CAAP;AAKD;AACF;AA/FqB;AAAA;AAAA,mDAkGA;AACpB,gBAAMT,GAAG,GAAG,sEAAYA,GAAZ,GAAkB,cAA9B;AACA,gBAAMC,IAAI,GAAG,wBAAb;;AACA,gBAAI,KAAKF,QAAL,CAAcG,EAAd,CAAiB,SAAjB,CAAJ,EAAiC;AAC/B,kBAAMC,IAAI,GAAG;AACXF,oBAAI,EAAJA;AADW,eAAb;AAGA,qBAAO,KAAKH,WAAL,CAAiBM,iBAAjB,CAAmCJ,GAAnC,EAAwCG,IAAxC,CAAP;AACD,aALD,MAKO;AACL,kBAAMA,MAAI,GAAGE,IAAI,CAACC,SAAL,CAAe;AAAEL,oBAAI,EAAJA;AAAF,eAAf,CAAb;;AACA,qBAAO,KAAKJ,IAAL,CAAUU,IAAV,CAA6BP,GAA7B,EAAkCG,MAAlC,EAAwCK,IAAxC,CACL,2DAAI,UAAAC,GAAG,EAAI;AACT,uBAAOA,GAAP;AACD,eAFD,CADK,CAAP;AAKD;AACF;AAlHqB;AAAA;AAAA,8CAmHFC,KAnHE,EAmHG;AACvB,gBAAMV,GAAG,GAAG,sEAAYA,GAAZ,GAAkB,cAA9B;AACA,gBAAMC,IAAI,GAAG,6BAAb;;AACA,gBAAI,KAAKF,QAAL,CAAcG,EAAd,CAAiB,SAAjB,CAAJ,EAAiC;AAC/B,kBAAMC,IAAI,GAAG;AACXF,oBAAI,EAAJA,IADW;AACLS,qBAAK,EAALA;AADK,eAAb;AAGA,qBAAO,KAAKZ,WAAL,CAAiBM,iBAAjB,CAAmCJ,GAAnC,EAAwCG,IAAxC,CAAP;AACD,aALD,MAKO;AACL,kBAAMA,MAAI,GAAGE,IAAI,CAACC,SAAL,CAAe;AAAEL,oBAAI,EAAJA,IAAF;AAAQS,qBAAK,EAALA;AAAR,eAAf,CAAb;;AACA,qBAAO,KAAKb,IAAL,CAAUU,IAAV,CAA6BP,GAA7B,EAAkCG,MAAlC,EAAwCK,IAAxC,CACL,2DAAI,UAAAC,GAAG,EAAI;AACT,uBAAOA,GAAP;AACD,eAFD,CADK,CAAP;AAKD;AACF;AAnIqB;AAAA;AAAA,6CAoIHE,SApIG,EAoIM;AAC1B,gBAAMX,GAAG,GAAG,sEAAYA,GAAZ,GAAkB,cAA9B;AACA,gBAAMC,IAAI,GAAG,oBAAb;;AACA,gBAAI,KAAKF,QAAL,CAAcG,EAAd,CAAiB,SAAjB,CAAJ,EAAiC;AAC/B,kBAAMC,IAAI,GAAG;AACXF,oBAAI,EAAJA,IADW;AACLU,yBAAS,EAATA;AADK,eAAb;AAGA,qBAAO,KAAKb,WAAL,CAAiBM,iBAAjB,CAAmCJ,GAAnC,EAAwCG,IAAxC,CAAP;AACD,aALD,MAKO;AACL,kBAAMA,MAAI,GAAGE,IAAI,CAACC,SAAL,CAAe;AAAEL,oBAAI,EAAJA,IAAF;AAAQU,yBAAS,EAATA;AAAR,eAAf,CAAb;;AACA,qBAAO,KAAKd,IAAL,CAAUU,IAAV,CAA6BP,GAA7B,EAAkCG,MAAlC,EAAwCK,IAAxC,CACL,2DAAI,UAAAC,GAAG,EAAI;AACT,uBAAOA,GAAP;AACD,eAFD,CADK,CAAP;AAKD;AACF;AApJqB;AAAA;AAAA,4CAsJJE,SAtJI,EAsJK;AACzB,gBAAMX,GAAG,GAAG,sEAAYA,GAAZ,GAAkB,cAA9B;AACA,gBAAMC,IAAI,GAAG,mBAAb;;AACA,gBAAI,KAAKF,QAAL,CAAcG,EAAd,CAAiB,SAAjB,CAAJ,EAAiC;AAC/B,kBAAMC,IAAI,GAAG;AACXF,oBAAI,EAAJA,IADW;AACLU,yBAAS,EAATA;AADK,eAAb;AAGA,qBAAO,KAAKb,WAAL,CAAiBM,iBAAjB,CAAmCJ,GAAnC,EAAwCG,IAAxC,CAAP;AACD,aALD,MAKO;AACL,kBAAMA,MAAI,GAAGE,IAAI,CAACC,SAAL,CAAe;AAAEL,oBAAI,EAAJA,IAAF;AAAQU,yBAAS,EAATA;AAAR,eAAf,CAAb;;AACA,qBAAO,KAAKd,IAAL,CAAUU,IAAV,CAA6BP,GAA7B,EAAkCG,MAAlC,EAAwCK,IAAxC,CACL,2DAAI,UAAAC,GAAG,EAAI;AACT,uBAAOA,GAAP;AACD,eAFD,CADK,CAAP;AAKD;AACF;AAtKqB;AAAA;AAAA,oCA0KZG,MA1KY,EA0KJD,SA1KI,EA0KOE,KA1KP,EA0KcC,QA1Kd,EA0KwBC,MA1KxB,EA0K8B;AAClD,gBAAMf,GAAG,GAAG,sEAAYA,GAAZ,GAAkB,cAA9B;AACA,gBAAMC,IAAI,GAAG,WAAb;AACA,gBAAMe,GAAG,GAAG,KAAKlB,WAAL,CAAiBmB,oBAAjB,CAAsCD,GAAlD;;AACA,gBAAI,KAAKjB,QAAL,CAAcG,EAAd,CAAiB,SAAjB,CAAJ,EAAiC;AAC/B,kBAAMC,IAAI,GAAG;AACXF,oBAAI,EAAJA,IADW;AACLe,mBAAG,EAAHA,GADK;AACAJ,sBAAM,EAANA,MADA;AACQD,yBAAS,EAATA,SADR;AACmBE,qBAAK,EAALA,KADnB;AAC0BC,wBAAQ,EAARA,QAD1B;AACoCC,sBAAM,EAANA;AADpC,eAAb;AAGA,qBAAO,KAAKjB,WAAL,CAAiBM,iBAAjB,CAAmCJ,GAAnC,EAAwCG,IAAxC,CAAP;AACD,aALD,MAKO;AACL,kBAAMA,OAAI,GAAGE,IAAI,CAACC,SAAL,CAAe;AAAEL,oBAAI,EAAJA,IAAF;AAAQe,mBAAG,EAAHA,GAAR;AAAaJ,sBAAM,EAANA,MAAb;AAAqBD,yBAAS,EAATA,SAArB;AAAgCE,qBAAK,EAALA,KAAhC;AAAuCC,wBAAQ,EAARA,QAAvC;AAAiDC,sBAAM,EAANA;AAAjD,eAAf,CAAb;;AACA,qBAAO,KAAKlB,IAAL,CAAUU,IAAV,CAA6BP,GAA7B,EAAkCG,OAAlC,EAAwCK,IAAxC,CACL,2DAAI,UAAAC,GAAG,EAAI;AACT,uBAAOA,GAAP;AACD,eAFD,CADK,CAAP;AAKD;AACF;AA3LqB;AAAA;AAAA,2CA4LLS,IA5LK,EA4LD;AACnB,gBAAMlB,GAAG,GAAG,sEAAYA,GAAZ,GAAkB,cAA9B;AACA,gBAAMC,IAAI,GAAG,kBAAb;AACA,gBAAMe,GAAG,GAAG,KAAKlB,WAAL,CAAiBmB,oBAAjB,CAAsCD,GAAlD;;AACA,gBAAI,KAAKjB,QAAL,CAAcG,EAAd,CAAiB,SAAjB,CAAJ,EAAiC;AAC/B,kBAAMC,IAAI,GAAG;AACXF,oBAAI,EAAJA,IADW;AACLe,mBAAG,EAAHA,GADK;AACAE,oBAAI,EAAJA;AADA,eAAb;AAGA,qBAAO,KAAKpB,WAAL,CAAiBM,iBAAjB,CAAmCJ,GAAnC,EAAwCG,IAAxC,CAAP;AACD,aALD,MAKO;AACL,kBAAMA,OAAI,GAAGE,IAAI,CAACC,SAAL,CAAe;AAAEL,oBAAI,EAAJA,IAAF;AAAQe,mBAAG,EAAHA,GAAR;AAAaE,oBAAI,EAAJA;AAAb,eAAf,CAAb;;AACA,qBAAO,KAAKrB,IAAL,CAAUU,IAAV,CAA6BP,GAA7B,EAAkCG,OAAlC,EAAwCK,IAAxC,CACL,2DAAI,UAAAC,GAAG,EAAI;AACT,uBAAOA,GAAP;AACD,eAFD,CADK,CAAP;AAKD;AACF;AA7MqB;AAAA;AAAA,gDA8MAO,GA9MA,EA8MG;AACvB,gBAAMhB,GAAG,GAAG,sEAAYA,GAAZ,GAAkB,cAA9B;AACA,gBAAMC,IAAI,GAAG,uBAAb;;AACA,gBAAI,KAAKF,QAAL,CAAcG,EAAd,CAAiB,SAAjB,CAAJ,EAAiC;AAC/B,kBAAMC,IAAI,GAAG;AACXF,oBAAI,EAAJA,IADW;AACLe,mBAAG,EAAHA;AADK,eAAb;AAGA,qBAAO,KAAKlB,WAAL,CAAiBM,iBAAjB,CAAmCJ,GAAnC,EAAwCG,IAAxC,CAAP;AACD,aALD,MAKO;AACL,kBAAMA,OAAI,GAAGE,IAAI,CAACC,SAAL,CAAe;AAAEL,oBAAI,EAAJA,IAAF;AAAQe,mBAAG,EAAHA;AAAR,eAAf,CAAb;;AACA,qBAAO,KAAKnB,IAAL,CAAUU,IAAV,CAA6BP,GAA7B,EAAkCG,OAAlC,EAAwCK,IAAxC,CACL,2DAAI,UAAAC,GAAG,EAAI;AACT,uBAAOA,GAAP;AACD,eAFD,CADK,CAAP;AAKD;AACF;AA9NqB;AAAA;AAAA,uCA+NTO,GA/NS,EA+NJG,OA/NI,EA+NKC,UA/NL,EA+NiBC,SA/NjB,EA+N0B;AAC9C,gBAAMrB,GAAG,GAAG,sEAAYA,GAAZ,GAAkB,cAA9B;AACA,gBAAMC,IAAI,GAAG,YAAb;;AACA,gBAAI,KAAKF,QAAL,CAAcG,EAAd,CAAiB,SAAjB,CAAJ,EAAiC;AAC/B,kBAAMC,IAAI,GAAG;AACXF,oBAAI,EAAJA,IADW;AACLe,mBAAG,EAAHA,GADK;AACAG,uBAAO,EAAPA,OADA;AACSC,0BAAU,EAAVA,UADT;AACqBC,yBAAS,EAATA;AADrB,eAAb;AAGA,qBAAO,KAAKvB,WAAL,CAAiBM,iBAAjB,CAAmCJ,GAAnC,EAAwCG,IAAxC,CAAP;AACD,aALD,MAKO;AACL,kBAAMA,OAAI,GAAGE,IAAI,CAACC,SAAL,CAAe;AAAEL,oBAAI,EAAJA,IAAF;AAAQe,mBAAG,EAAHA,GAAR;AAAaG,uBAAO,EAAPA,OAAb;AAAsBC,0BAAU,EAAVA,UAAtB;AAAkCC,yBAAS,EAATA;AAAlC,eAAf,CAAb;;AACA,qBAAO,KAAKxB,IAAL,CAAUU,IAAV,CAA6BP,GAA7B,EAAkCG,OAAlC,EAAwCK,IAAxC,CACL,2DAAI,UAAAC,GAAG,EAAI;AACT,uBAAOA,GAAP;AACD,eAFD,CADK,CAAP;AAKD;AACF;AA/OqB;AAAA;AAAA,yCAgPV;AACV,gBAAMT,GAAG,GAAG,sEAAYA,GAAZ,GAAkB,cAA9B;AACA,gBAAMC,IAAI,GAAG,gBAAb;;AACA,gBAAI,KAAKF,QAAL,CAAcG,EAAd,CAAiB,SAAjB,CAAJ,EAAiC;AAC/B,kBAAMC,IAAI,GAAG;AACXF,oBAAI,EAAJA;AADW,eAAb;AAGA,qBAAO,KAAKH,WAAL,CAAiBM,iBAAjB,CAAmCJ,GAAnC,EAAwCG,IAAxC,CAAP;AACD,aALD,MAKO;AACL,kBAAMA,OAAI,GAAGE,IAAI,CAACC,SAAL,CAAe;AAAEL,oBAAI,EAAJA;AAAF,eAAf,CAAb;;AACA,qBAAO,KAAKJ,IAAL,CAAUU,IAAV,CAA6BP,GAA7B,EAAkCG,OAAlC,EAAwCK,IAAxC,CACL,2DAAI,UAAAC,GAAG,EAAI;AACT,uBAAOA,GAAP;AACD,eAFD,CADK,CAAP;AAKD;AACF;AAhQqB;AAAA;AAAA,uCAkQTG,MAlQS,EAkQDD,SAlQC,EAkQUE,KAlQV,EAkQiBC,QAlQjB,EAkQ2BC,MAlQ3B,EAkQiC;AACrD,gBAAMf,GAAG,GAAG,sEAAYA,GAAZ,GAAkB,cAA9B;AACA,gBAAMC,IAAI,GAAG,eAAb;AACA,gBAAMe,GAAG,GAAG,KAAKlB,WAAL,CAAiBmB,oBAAjB,CAAsCD,GAAlD;;AACA,gBAAI,KAAKjB,QAAL,CAAcG,EAAd,CAAiB,SAAjB,CAAJ,EAAiC;AAC/B,kBAAMC,IAAI,GAAG;AACXF,oBAAI,EAAJA,IADW;AACLe,mBAAG,EAAHA,GADK;AACAJ,sBAAM,EAANA,MADA;AACQD,yBAAS,EAATA,SADR;AACmBE,qBAAK,EAALA,KADnB;AAC0BC,wBAAQ,EAARA,QAD1B;AACoCC,sBAAM,EAANA;AADpC,eAAb;AAGA,qBAAO,KAAKjB,WAAL,CAAiBM,iBAAjB,CAAmCJ,GAAnC,EAAwCG,IAAxC,CAAP;AACD,aALD,MAKO;AACL,kBAAMA,OAAI,GAAGE,IAAI,CAACC,SAAL,CAAe;AAAEL,oBAAI,EAAJA,IAAF;AAAQe,mBAAG,EAAHA,GAAR;AAAaJ,sBAAM,EAANA,MAAb;AAAqBD,yBAAS,EAATA,SAArB;AAAgCE,qBAAK,EAALA,KAAhC;AAAuCC,wBAAQ,EAARA,QAAvC;AAAiDC,sBAAM,EAANA;AAAjD,eAAf,CAAb;;AACA,qBAAO,KAAKlB,IAAL,CAAUU,IAAV,CAA6BP,GAA7B,EAAkCG,OAAlC,EAAwCK,IAAxC,CACL,2DAAI,UAAAC,GAAG,EAAI;AACT,uBAAOA,GAAP;AACD,eAFD,CADK,CAAP;AAKD;AACF;AAnRqB;AAAA;AAAA,uCAoRTG,MApRS,EAoRDU,QApRC,EAoRSX,SApRT,EAoRkB;AACtC,gBAAMX,GAAG,GAAG,sEAAYA,GAAZ,GAAkB,cAA9B;AACA,gBAAMC,IAAI,GAAG,eAAb;;AACA,gBAAI,KAAKF,QAAL,CAAcG,EAAd,CAAiB,SAAjB,CAAJ,EAAiC;AAC/B,kBAAMC,IAAI,GAAG;AACXF,oBAAI,EAAJA,IADW;AACLW,sBAAM,EAANA,MADK;AACGU,wBAAQ,EAARA,QADH;AACaX,yBAAS,EAATA;AADb,eAAb;AAGA,qBAAO,KAAKb,WAAL,CAAiBM,iBAAjB,CAAmCJ,GAAnC,EAAwCG,IAAxC,CAAP;AACD,aALD,MAKO;AACL,kBAAMA,OAAI,GAAGE,IAAI,CAACC,SAAL,CAAe;AAAEL,oBAAI,EAAJA,IAAF;AAAQW,sBAAM,EAANA,MAAR;AAAgBU,wBAAQ,EAARA,QAAhB;AAA0BX,yBAAS,EAATA;AAA1B,eAAf,CAAb;;AACA,qBAAO,KAAKd,IAAL,CAAUU,IAAV,CAA6BP,GAA7B,EAAkCG,OAAlC,EAAwCK,IAAxC,CACL,2DAAI,UAAAC,GAAG,EAAI;AACT,uBAAOA,GAAP;AACD,eAFD,CADK,CAAP;AAKD;AACF;AApSqB;AAAA;AAAA,sCAsSVO,GAtSU,EAsSP;AACb,gBAAMhB,GAAG,GAAG,sEAAYA,GAAZ,GAAkB,cAA9B;AACA,gBAAMC,IAAI,GAAG,aAAb;;AACA,gBAAI,KAAKF,QAAL,CAAcG,EAAd,CAAiB,SAAjB,CAAJ,EAAiC;AAC/B,kBAAMC,IAAI,GAAG;AACXF,oBAAI,EAAJA,IADW;AACLe,mBAAG,EAAHA;AADK,eAAb;AAGA,qBAAO,KAAKlB,WAAL,CAAiBM,iBAAjB,CAAmCJ,GAAnC,EAAwCG,IAAxC,CAAP;AACD,aALD,MAKO;AACL,kBAAMA,OAAI,GAAGE,IAAI,CAACC,SAAL,CAAe;AAAEL,oBAAI,EAAJA,IAAF;AAAQe,mBAAG,EAAHA;AAAR,eAAf,CAAb;;AACA,qBAAO,KAAKnB,IAAL,CAAUU,IAAV,CAA6BP,GAA7B,EAAkCG,OAAlC,EAAwCK,IAAxC,CACL,2DAAI,UAAAC,GAAG,EAAI;AACT,uBAAOA,GAAP;AACD,eAFD,CADK,CAAP;AAKD;AACF;AAtTqB;AAAA;AAAA,4CAuTJO,GAvTI,EAuTD;AACnB,gBAAMhB,GAAG,GAAG,sEAAYA,GAAZ,GAAkB,cAA9B;AACA,gBAAMC,IAAI,GAAG,mBAAb;;AACA,gBAAI,KAAKF,QAAL,CAAcG,EAAd,CAAiB,SAAjB,CAAJ,EAAiC;AAC/B,kBAAMC,IAAI,GAAG;AACXF,oBAAI,EAAJA,IADW;AACLe,mBAAG,EAAHA;AADK,eAAb;AAGA,qBAAO,KAAKlB,WAAL,CAAiBM,iBAAjB,CAAmCJ,GAAnC,EAAwCG,IAAxC,CAAP;AACD,aALD,MAKO;AACL,kBAAMA,OAAI,GAAGE,IAAI,CAACC,SAAL,CAAe;AAAEL,oBAAI,EAAJA,IAAF;AAAQe,mBAAG,EAAHA;AAAR,eAAf,CAAb;;AACA,qBAAO,KAAKnB,IAAL,CAAUU,IAAV,CAA6BP,GAA7B,EAAkCG,OAAlC,EAAwCK,IAAxC,CACL,2DAAI,UAAAC,GAAG,EAAI;AACT,uBAAOA,GAAP;AACD,eAFD,CADK,CAAP;AAKD;AACF;AAvUqB;AAAA;AAAA,qCAyUXO,GAzUW,EAyUNG,OAzUM,EAyUGC,UAzUH,EAyUeC,SAzUf,EAyU0BE,MAzU1B,EAyUkCC,OAzUlC,EAyU2CC,KAzU3C,EAyUgD;AACpE,gBAAMzB,GAAG,GAAG,sEAAYA,GAAZ,GAAkB,cAA9B;AACA,gBAAMC,IAAI,GAAG,yBAAb;;AACA,gBAAI,KAAKF,QAAL,CAAcG,EAAd,CAAiB,SAAjB,CAAJ,EAAiC;AAC/B,kBAAMC,IAAI,GAAG;AACXF,oBAAI,EAAJA,IADW;AACLe,mBAAG,EAAHA,GADK;AACAG,uBAAO,EAAPA,OADA;AACSC,0BAAU,EAAVA,UADT;AACqBC,yBAAS,EAATA,SADrB;AACgCE,sBAAM,EAANA,MADhC;AACwCC,uBAAO,EAAPA,OADxC;AACiDC,qBAAK,EAALA;AADjD,eAAb;AAGA,qBAAO,KAAK3B,WAAL,CAAiBM,iBAAjB,CAAmCJ,GAAnC,EAAwCG,IAAxC,CAAP;AACD,aALD,MAKO;AACL,kBAAMA,OAAI,GAAGE,IAAI,CAACC,SAAL,CAAe;AAAEL,oBAAI,EAAJA,IAAF;AAAQe,mBAAG,EAAHA,GAAR;AAAaG,uBAAO,EAAPA,OAAb;AAAsBC,0BAAU,EAAVA,UAAtB;AAAkCC,yBAAS,EAATA,SAAlC;AAA6CE,sBAAM,EAANA,MAA7C;AAAqDC,uBAAO,EAAPA,OAArD;AAA8DC,qBAAK,EAALA;AAA9D,eAAf,CAAb;;AACA,qBAAO,KAAK5B,IAAL,CAAUU,IAAV,CAA6BP,GAA7B,EAAkCG,OAAlC,EAAwCK,IAAxC,CACL,2DAAI,UAAAC,GAAG,EAAI;AACT,uBAAOA,GAAP;AACD,eAFD,CADK,CAAP;AAKD;AACF;AAzVqB;AAAA;AAAA,qCA0VXO,GA1VW,EA0VNG,OA1VM,EA0VGI,MA1VH,EA0VWC,OA1VX,EA0VoBC,KA1VpB,EA0VyB;AAC7C,gBAAMzB,GAAG,GAAG,sEAAYA,GAAZ,GAAkB,cAA9B;AACA,gBAAMC,IAAI,GAAG,yBAAb;;AACA,gBAAI,KAAKF,QAAL,CAAcG,EAAd,CAAiB,SAAjB,CAAJ,EAAiC;AAC/B,kBAAMC,IAAI,GAAG;AACXF,oBAAI,EAAJA,IADW;AACLe,mBAAG,EAAHA,GADK;AACAG,uBAAO,EAAPA,OADA;AACSI,sBAAM,EAANA,MADT;AACiBC,uBAAO,EAAPA,OADjB;AAC0BC,qBAAK,EAALA;AAD1B,eAAb;AAGA,qBAAO,KAAK3B,WAAL,CAAiBM,iBAAjB,CAAmCJ,GAAnC,EAAwCG,IAAxC,CAAP;AACD,aALD,MAKO;AACL,kBAAMA,OAAI,GAAGE,IAAI,CAACC,SAAL,CAAe;AAAEL,oBAAI,EAAJA,IAAF;AAAQe,mBAAG,EAAHA,GAAR;AAAaG,uBAAO,EAAPA,OAAb;AAAsBI,sBAAM,EAANA,MAAtB;AAA8BC,uBAAO,EAAPA,OAA9B;AAAuCC,qBAAK,EAALA;AAAvC,eAAf,CAAb;;AACA,qBAAO,KAAK5B,IAAL,CAAUU,IAAV,CAA6BP,GAA7B,EAAkCG,OAAlC,EAAwCK,IAAxC,CACL,2DAAI,UAAAC,GAAG,EAAI;AACT,uBAAOA,GAAP;AACD,eAFD,CADK,CAAP;AAKD;AACF;AA1WqB;AAAA;AAAA,2CA2WLO,GA3WK,EA2WF;AAClB,gBAAMhB,GAAG,GAAG,sEAAYA,GAAZ,GAAkB,cAA9B;AACA,gBAAMC,IAAI,GAAG,kBAAb;;AACA,gBAAI,KAAKF,QAAL,CAAcG,EAAd,CAAiB,SAAjB,CAAJ,EAAiC;AAC/B,kBAAMC,IAAI,GAAG;AACXF,oBAAI,EAAJA,IADW;AACLe,mBAAG,EAAHA;AADK,eAAb;AAGA,qBAAO,KAAKlB,WAAL,CAAiBM,iBAAjB,CAAmCJ,GAAnC,EAAwCG,IAAxC,CAAP;AACD,aALD,MAKO;AACL,kBAAMA,OAAI,GAAGE,IAAI,CAACC,SAAL,CAAe;AAAEL,oBAAI,EAAJA,IAAF;AAAQe,mBAAG,EAAHA;AAAR,eAAf,CAAb;;AACA,qBAAO,KAAKnB,IAAL,CAAUU,IAAV,CAA6BP,GAA7B,EAAkCG,OAAlC,EAAwCK,IAAxC,CACL,2DAAI,UAAAC,GAAG,EAAI;AACT,uBAAOA,GAAP;AACD,eAFD,CADK,CAAP;AAKD;AACF;AA3XqB;AAAA;AAAA,yCA4XPiB,WA5XO,EA4XI;AACxB,gBAAM1B,GAAG,GAAG,sEAAYA,GAAZ,GAAkB,cAA9B;AACA,gBAAMC,IAAI,GAAG,gBAAb;;AACA,gBAAI,KAAKF,QAAL,CAAcG,EAAd,CAAiB,SAAjB,CAAJ,EAAiC;AAC/B,kBAAMC,IAAI,GAAG;AACXF,oBAAI,EAAJA,IADW;AACLyB,2BAAW,EAAXA;AADK,eAAb;AAGA,qBAAO,KAAK5B,WAAL,CAAiBM,iBAAjB,CAAmCJ,GAAnC,EAAwCG,IAAxC,CAAP;AACD,aALD,MAKO;AACL,kBAAMA,OAAI,GAAGE,IAAI,CAACC,SAAL,CAAe;AAAEL,oBAAI,EAAJA,IAAF;AAAQyB,2BAAW,EAAXA;AAAR,eAAf,CAAb;;AACA,qBAAO,KAAK7B,IAAL,CAAUU,IAAV,CAA6BP,GAA7B,EAAkCG,OAAlC,EAAwCK,IAAxC,CACL,2DAAI,UAAAC,GAAG,EAAI;AACT,uBAAOA,GAAP;AACD,eAFD,CADK,CAAP;AAKD;AACF;AA5YqB;AAAA;AAAA,0CA8YT;AACX,gBAAMT,GAAG,GAAG,sEAAYA,GAAZ,GAAkB,iBAA9B;AACA,gBAAMC,IAAI,GAAG,eAAb;;AACA,gBAAI,KAAKF,QAAL,CAAcG,EAAd,CAAiB,SAAjB,CAAJ,EAAiC;AAC/B,kBAAMC,IAAI,GAAG;AACXF,oBAAI,EAAJA;AADW,eAAb;AAGA,qBAAO,KAAKH,WAAL,CAAiBM,iBAAjB,CAAmCJ,GAAnC,EAAwCG,IAAxC,CAAP;AACD,aALD,MAKO;AACL,kBAAMA,OAAI,GAAGE,IAAI,CAACC,SAAL,CAAe;AAAEL,oBAAI,EAAJA;AAAF,eAAf,CAAb;;AACA,qBAAO,KAAKJ,IAAL,CAAUU,IAAV,CAA6BP,GAA7B,EAAkCG,OAAlC,EAAwCK,IAAxC,CACL,2DAAI,UAAAC,GAAG,EAAI;AACT,uBAAOA,GAAP;AACD,eAFD,CADK,CAAP;AAKD;AACF;AA9ZqB;AAAA;AAAA,qCA+Zd;AACN,gBAAMT,GAAG,GAAG,sEAAYA,GAAZ,GAAkB,iBAA9B;AACA,gBAAMC,IAAI,GAAG,UAAb;;AACA,gBAAI,KAAKF,QAAL,CAAcG,EAAd,CAAiB,SAAjB,CAAJ,EAAiC;AAC/B,kBAAMC,IAAI,GAAG;AACXF,oBAAI,EAAJA;AADW,eAAb;AAGA,qBAAO,KAAKH,WAAL,CAAiBM,iBAAjB,CAAmCJ,GAAnC,EAAwCG,IAAxC,CAAP;AACD,aALD,MAKO;AACL,kBAAMA,OAAI,GAAGE,IAAI,CAACC,SAAL,CAAe;AAAEL,oBAAI,EAAJA;AAAF,eAAf,CAAb;;AACA,qBAAO,KAAKJ,IAAL,CAAUU,IAAV,CAA6BP,GAA7B,EAAkCG,OAAlC,EAAwCK,IAAxC,CACL,2DAAI,UAAAC,GAAG,EAAI;AACT,uBAAOA,GAAP;AACD,eAFD,CADK,CAAP;AAKD;AACF;AA/aqB;;AAAA;AAAA,S;;;;gBAPf;;gBALA;;gBAFA;;;;AAcIb,iBAAW,6DAHvB,iEAAW;AACV+B,kBAAU,EAAE;AADF,OAAX,CAGuB,GAAX/B,WAAW,CAAX","file":"default~buy-buy-module~cart-cart-module~cashouts-new-new-module~categories-categories-module~categor~2f8db852-es5.js","sourcesContent":["import { Platform } from '@ionic/angular';\nimport { from } from 'rxjs';\nimport { AuthServiceService } from './../../authenticate/service/auth-service.service';\nimport { environment } from './../../../environments/environment';\nimport { ResponseType } from './../../../interfaces/response';\nimport { Observable } from 'rxjs';\nimport { HTTP } from '@ionic-native/http/ngx';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShopService {\n\n  constructor(\n    private http: HttpClient,\n    private authService: AuthServiceService, private platform: Platform\n  ) {\n\n  }\n\n  GetCategories(): Observable<ResponseType> {\n    const url = environment.url + 'MShopServlet';\n    const type = 'GetRootCategories';\n    if (this.platform.is('android')) {\n      const data = {\n        type\n      };\n      return this.authService.nativeHttpRequest(url, data);\n    } else {\n      const data = JSON.stringify({ type });\n      return this.http.post<ResponseType>(url, data).pipe(\n        map(res => {\n          return res;\n        })\n      );\n    }\n  }\n  \n  GetTopSellingProducts(): Observable<ResponseType> {\n    const url = environment.url + 'MShopServlet';\n    const type = 'GetTopSellingProducts';\n    if (this.platform.is('android')) {\n      const data = {\n        type\n      };\n      return this.authService.nativeHttpRequest(url, data);\n    } else {\n      const data = JSON.stringify({ type });\n      return this.http.post<ResponseType>(url, data).pipe(\n        map(res => {\n          return res;\n        })\n      );\n    }\n  }\n  GetRecentlyAddedProducts(): Observable<ResponseType> {\n    const url = environment.url + 'MShopServlet';\n    const type = 'GetRecentlyAddedProducts';\n    if (this.platform.is('android')) {\n      const data = {\n        type\n      };\n      return this.authService.nativeHttpRequest(url, data);\n    } else {\n      const data = JSON.stringify({ type });\n      return this.http.post<ResponseType>(url, data).pipe(\n        map(res => {\n          return res;\n        })\n      );\n    }\n  }\n  GetFeaturedProducts(): Observable<ResponseType> {\n    const url = environment.url + 'MShopServlet';\n    const type = 'GetFeaturedProducts';\n    if (this.platform.is('android')) {\n      const data = {\n        type\n      };\n      return this.authService.nativeHttpRequest(url, data);\n    } else {\n      const data = JSON.stringify({ type });\n      return this.http.post<ResponseType>(url, data).pipe(\n        map(res => {\n          return res;\n        })\n      );\n    }\n  }\n\n  GetAppVersion(): Observable<ResponseType> {\n    const url = environment.url + 'MShopServlet';\n    const type = 'GetAppVersion';\n    if (this.platform.is('android')) {\n      const data = {\n        type\n      };\n      return this.authService.nativeHttpRequest(url, data);\n    } else {\n      const data = JSON.stringify({ type });\n      return this.http.post<ResponseType>(url, data).pipe(\n        map(res => {\n          return res;\n        })\n      );\n    }\n  }\n\n\n  GetBestSellersProducts(): Observable<ResponseType> {\n    const url = environment.url + 'MShopServlet';\n    const type = 'GetBestSellersProducts';\n    if (this.platform.is('android')) {\n      const data = {\n        type\n      };\n      return this.authService.nativeHttpRequest(url, data);\n    } else {\n      const data = JSON.stringify({ type });\n      return this.http.post<ResponseType>(url, data).pipe(\n        map(res => {\n          return res;\n        })\n      );\n    }\n  }\n  GetCategoryProducts(catid): Observable<ResponseType> {\n    const url = environment.url + 'MShopServlet';\n    const type = 'GetShopProductsByCategoryID';\n    if (this.platform.is('android')) {\n      const data = {\n        type, catid\n      };\n      return this.authService.nativeHttpRequest(url, data);\n    } else {\n      const data = JSON.stringify({ type, catid });\n      return this.http.post<ResponseType>(url, data).pipe(\n        map(res => {\n          return res;\n        })\n      );\n    }\n  }\n  GetRelatedProducts(productid): Observable<ResponseType> {\n    const url = environment.url + 'MShopServlet';\n    const type = 'GetRelatedProducts';\n    if (this.platform.is('android')) {\n      const data = {\n        type, productid\n      };\n      return this.authService.nativeHttpRequest(url, data);\n    } else {\n      const data = JSON.stringify({ type, productid });\n      return this.http.post<ResponseType>(url, data).pipe(\n        map(res => {\n          return res;\n        })\n      );\n    }\n  }\n  \n  GetProductDetails(productid): Observable<ResponseType> {\n    const url = environment.url + 'MShopServlet';\n    const type = 'GetProductDetails';\n    if (this.platform.is('android')) {\n      const data = {\n        type, productid\n      };\n      return this.authService.nativeHttpRequest(url, data);\n    } else {\n      const data = JSON.stringify({ type, productid });\n      return this.http.post<ResponseType>(url, data).pipe(\n        map(res => {\n          return res;\n        })\n      );\n    }\n  }\n\n\n\n  AddOption(option, productid, price, quantity, action): Observable<ResponseType> {\n    const url = environment.url + 'MShopServlet';\n    const type = 'AddOption';\n    const sid = this.authService.currentUserDataValue.sid;\n    if (this.platform.is('android')) {\n      const data = {\n        type, sid, option, productid, price, quantity, action\n      };\n      return this.authService.nativeHttpRequest(url, data);\n    } else {\n      const data = JSON.stringify({ type, sid, option, productid, price, quantity, action });\n      return this.http.post<ResponseType>(url, data).pipe(\n        map(res => {\n          return res;\n        })\n      );\n    }\n  }\n  CartDiscountCode(code): Observable<ResponseType> {\n    const url = environment.url + 'MShopServlet';\n    const type = 'CartDiscountCode';\n    const sid = this.authService.currentUserDataValue.sid;\n    if (this.platform.is('android')) {\n      const data = {\n        type, sid, code\n      };\n      return this.authService.nativeHttpRequest(url, data);\n    } else {\n      const data = JSON.stringify({ type, sid, code });\n      return this.http.post<ResponseType>(url, data).pipe(\n        map(res => {\n          return res;\n        })\n      );\n    }\n  }\n  GetCartDefaultAddress(sid): Observable<ResponseType> {\n    const url = environment.url + 'MShopServlet';\n    const type = 'GetCartDefaultAddress';\n    if (this.platform.is('android')) {\n      const data = {\n        type, sid\n      };\n      return this.authService.nativeHttpRequest(url, data);\n    } else {\n      const data = JSON.stringify({ type, sid });\n      return this.http.post<ResponseType>(url, data).pipe(\n        map(res => {\n          return res;\n        })\n      );\n    }\n  }\n  processOrder(sid, paytype, shiptypeid, addressid): Observable<ResponseType> {\n    const url = environment.url + 'MShopServlet';\n    const type = 'PlaceOrder';\n    if (this.platform.is('android')) {\n      const data = {\n        type, sid, paytype, shiptypeid, addressid\n      };\n      return this.authService.nativeHttpRequest(url, data);\n    } else {\n      const data = JSON.stringify({ type, sid, paytype, shiptypeid, addressid });\n      return this.http.post<ResponseType>(url, data).pipe(\n        map(res => {\n          return res;\n        })\n      );\n    }\n  }\n  getParameter(): Observable<ResponseType> {\n    const url = environment.url + 'MShopServlet';\n    const type = 'GetPaystackKey';\n    if (this.platform.is('android')) {\n      const data = {\n        type\n      };\n      return this.authService.nativeHttpRequest(url, data);\n    } else {\n      const data = JSON.stringify({ type });\n      return this.http.post<ResponseType>(url, data).pipe(\n        map(res => {\n          return res;\n        })\n      );\n    }\n  }\n\n  UpdateOption(option, productid, price, quantity, action): Observable<ResponseType> {\n    const url = environment.url + 'MShopServlet';\n    const type = 'UpdateOptions';\n    const sid = this.authService.currentUserDataValue.sid;\n    if (this.platform.is('android')) {\n      const data = {\n        type, sid, option, productid, price, quantity, action\n      };\n      return this.authService.nativeHttpRequest(url, data);\n    } else {\n      const data = JSON.stringify({ type, sid, option, productid, price, quantity, action });\n      return this.http.post<ResponseType>(url, data).pipe(\n        map(res => {\n          return res;\n        })\n      );\n    }\n  }\n  DeleteOption(option, optionid, productid): Observable<ResponseType> {\n    const url = environment.url + 'MShopServlet';\n    const type = 'DeleteOptions';\n    if (this.platform.is('android')) {\n      const data = {\n        type, option, optionid, productid\n      };\n      return this.authService.nativeHttpRequest(url, data);\n    } else {\n      const data = JSON.stringify({ type, option, optionid, productid });\n      return this.http.post<ResponseType>(url, data).pipe(\n        map(res => {\n          return res;\n        })\n      );\n    }\n  }\n\n  GetUserCart(sid): Observable<ResponseType> {\n    const url = environment.url + 'MShopServlet';\n    const type = 'GetShopCart';\n    if (this.platform.is('android')) {\n      const data = {\n        type, sid\n      };\n      return this.authService.nativeHttpRequest(url, data);\n    } else {\n      const data = JSON.stringify({ type, sid });\n      return this.http.post<ResponseType>(url, data).pipe(\n        map(res => {\n          return res;\n        })\n      );\n    }\n  }\n  GetShopSavedItems(sid): Observable<ResponseType> {\n    const url = environment.url + 'MShopServlet';\n    const type = 'GetShopSavedItems';\n    if (this.platform.is('android')) {\n      const data = {\n        type, sid\n      };\n      return this.authService.nativeHttpRequest(url, data);\n    } else {\n      const data = JSON.stringify({ type, sid });\n      return this.http.post<ResponseType>(url, data).pipe(\n        map(res => {\n          return res;\n        })\n      );\n    }\n  }\n\n  placeOrder(sid, paytype, shiptypeid, addressid, amount, refcode, tcode): Observable<ResponseType> {\n    const url = environment.url + 'MShopServlet';\n    const type = 'ValidatePaystackPayment';\n    if (this.platform.is('android')) {\n      const data = {\n        type, sid, paytype, shiptypeid, addressid, amount, refcode, tcode\n      };\n      return this.authService.nativeHttpRequest(url, data);\n    } else {\n      const data = JSON.stringify({ type, sid, paytype, shiptypeid, addressid, amount, refcode, tcode });\n      return this.http.post<ResponseType>(url, data).pipe(\n        map(res => {\n          return res;\n        })\n      );\n    }\n  }\n  fundWallet(sid, paytype, amount, refcode, tcode): Observable<ResponseType> {\n    const url = environment.url + 'MShopServlet';\n    const type = 'ValidatePaystackPayment';\n    if (this.platform.is('android')) {\n      const data = {\n        type, sid, paytype, amount, refcode, tcode\n      };\n      return this.authService.nativeHttpRequest(url, data);\n    } else {\n      const data = JSON.stringify({ type, sid, paytype, amount, refcode, tcode });\n      return this.http.post<ResponseType>(url, data).pipe(\n        map(res => {\n          return res;\n        })\n      );\n    }\n  }\n  GetStockMovement(sid): Observable<ResponseType> {\n    const url = environment.url + 'MShopServlet';\n    const type = 'GetStockMovement';\n    if (this.platform.is('android')) {\n      const data = {\n        type, sid\n      };\n      return this.authService.nativeHttpRequest(url, data);\n    } else {\n      const data = JSON.stringify({ type, sid });\n      return this.http.post<ResponseType>(url, data).pipe(\n        map(res => {\n          return res;\n        })\n      );\n    }\n  }\n  SearchProducts(searchvalue): Observable<ResponseType> {\n    const url = environment.url + 'MShopServlet';\n    const type = 'SearchProducts';\n    if (this.platform.is('android')) {\n      const data = {\n        type, searchvalue\n      };\n      return this.authService.nativeHttpRequest(url, data);\n    } else {\n      const data = JSON.stringify({ type, searchvalue });\n      return this.http.post<ResponseType>(url, data).pipe(\n        map(res => {\n          return res;\n        })\n      );\n    }\n  }\n\n  GetProperties(): Observable<ResponseType> {\n    const url = environment.url + 'MProductServlet';\n    const type = 'GetProperties';\n    if (this.platform.is('android')) {\n      const data = {\n        type\n      };\n      return this.authService.nativeHttpRequest(url, data);\n    } else {\n      const data = JSON.stringify({ type });\n      return this.http.post<ResponseType>(url, data).pipe(\n        map(res => {\n          return res;\n        })\n      );\n    }\n  }\n  GetUnits(): Observable<ResponseType> {\n    const url = environment.url + 'MProductServlet';\n    const type = 'GetUnits';\n    if (this.platform.is('android')) {\n      const data = {\n        type\n      };\n      return this.authService.nativeHttpRequest(url, data);\n    } else {\n      const data = JSON.stringify({ type });\n      return this.http.post<ResponseType>(url, data).pipe(\n        map(res => {\n          return res;\n        })\n      );\n    }\n  }\n}\n"]}