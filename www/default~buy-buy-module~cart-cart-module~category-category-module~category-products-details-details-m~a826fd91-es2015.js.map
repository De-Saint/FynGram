{"version":3,"sources":["./src/app/home/service/shop.service.ts"],"names":[],"mappings":"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","file":"default~buy-buy-module~cart-cart-module~category-category-module~category-products-details-details-m~a826fd91-es2015.js","sourcesContent":["import { Platform } from '@ionic/angular';\nimport { from } from 'rxjs';\nimport { AuthServiceService } from './../../authenticate/service/auth-service.service';\nimport { environment } from './../../../environments/environment';\nimport { ResponseType } from './../../../interfaces/response';\nimport { Observable } from 'rxjs';\nimport { HTTP } from '@ionic-native/http/ngx';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShopService {\n\n  constructor(\n    private http: HttpClient, private nativeHttp: HTTP,\n    private authService: AuthServiceService, private platform: Platform\n  ) {\n\n  }\n\n  GetCategories(): Observable<ResponseType> {\n    const url = environment.url + 'MProductServlet';\n    const type = 'GetRootCategories';\n    // if (this.platform.is(\"android\")) {\n    // const data = {\n    //   type\n    // };\n    //   this.nativeHttp.setDataSerializer(\"json\");\n    //   let nativeCall = this.nativeHttp.get(url, data, { \"Content-Type\": \"application/json\" });\n    //   return from(nativeCall).pipe(\n    //     map(result => {\n    // if(result.code === 200){\n    //       return JSON.parse(result.data);\n    //     })\n    //   )\n    // } else {\n    const data = JSON.stringify({ type });\n    return this.http.post<ResponseType>(url, data).pipe(\n      map(res => {\n        return res;\n      })\n    );\n    // }\n  }\n  GetTopSellingProducts(): Observable<ResponseType> {\n    const url = environment.url + 'MProductServlet';\n    const type = 'GetTopSellingProducts';\n    // if (this.platform.is('android')) {\n    //   const data = {\n    //     type\n    //   };\n    //   this.nativeHttp.setDataSerializer(\"json\");\n    //   let nativeCall = this.nativeHttp.get(url, data, { \"Content-Type\": \"application/json\" });\n    //   return from(nativeCall).pipe(\n    //     map(result => {\n    //       return JSON.parse(result.data);\n    //     })\n    //   )\n    // } else {\n    const data = JSON.stringify({ type });\n    return this.http.post<ResponseType>(url, data).pipe(\n      map(res => {\n        return res;\n      })\n    );\n    //}\n  }\n  GetRecentlyAddedProducts(): Observable<ResponseType> {\n    const url = environment.url + 'MProductServlet';\n    const type = 'GetRecentlyAddedProducts';\n    // if (this.platform.is(\"android\")) {\n    // const data = {\n    //   type\n    // };\n    //   this.nativeHttp.setDataSerializer(\"json\");\n    //   let nativeCall = this.nativeHttp.get(url, data, { \"Content-Type\": \"application/json\" });\n    //   return from(nativeCall).pipe(\n    //     map(result => {\n    // if(result.code === 200){\n    //       return JSON.parse(result.data);\n    //     })\n    //   )\n    // } else {\n    const data = JSON.stringify({ type });\n    return this.http.post<ResponseType>(url, data).pipe(\n      map(res => {\n        return res;\n      })\n    );\n    // }\n  }\n  GetFeaturedProducts(): Observable<ResponseType> {\n    const url = environment.url + 'MProductServlet';\n    const type = 'GetFeaturedProducts';\n    // if (this.platform.is(\"android\")) {\n    // const data = {\n    //   type\n    // };\n    //   this.nativeHttp.setDataSerializer(\"json\");\n    //   let nativeCall = this.nativeHttp.get(url, data, { \"Content-Type\": \"application/json\" });\n    //   return from(nativeCall).pipe(\n    //     map(result => {\n    // if(result.code === 200){\n    //       return JSON.parse(result.data);\n    //     })\n    //   )\n    // } else {\n    const data = JSON.stringify({ type });\n    return this.http.post<ResponseType>(url, data).pipe(\n      map(res => {\n        return res;\n      })\n    );\n    // }\n  }\n  GetBestSellersProducts(): Observable<ResponseType> {\n    const url = environment.url + 'MProductServlet';\n    const type = 'GetBestSellersProducts';\n    // if (this.platform.is(\"android\")) {\n    // const data = {\n    //   type\n    // };\n    //   this.nativeHttp.setDataSerializer(\"json\");\n    //   let nativeCall = this.nativeHttp.get(url, data, { \"Content-Type\": \"application/json\" });\n    //   return from(nativeCall).pipe(\n    //     map(result => {\n    // if(result.code === 200){\n    //       return JSON.parse(result.data);\n    //     })\n    //   )\n    // } else {\n    const data = JSON.stringify({ type });\n    return this.http.post<ResponseType>(url, data).pipe(\n      map(res => {\n        return res;\n      })\n    );\n    // }\n  }\n  GetCategoryProducts(catid): Observable<ResponseType> {\n    const url = environment.url + 'MProductServlet';\n    const type = 'GetShopProductsByCategoryID';\n    // if (this.platform.is(\"android\")) {\n    // const data = {\n    //   type,\n    // catid\n    // };\n    //   this.nativeHttp.setDataSerializer(\"json\");\n    //   let nativeCall = this.nativeHttp.get(url, data, { \"Content-Type\": \"application/json\" });\n    //   return from(nativeCall).pipe(\n    //     map(result => {\n    // if(result.code === 200){\n    //       return JSON.parse(result.data);\n    //     })\n    //   )\n    // } else {\n    const data = JSON.stringify({ type, catid });\n    return this.http.post<ResponseType>(url, data).pipe(\n      map(res => {\n        return res;\n      })\n    );\n    // }\n  }\n  GetRelatedProducts(productid): Observable<ResponseType> {\n    const url = environment.url + 'MProductServlet';\n    const type = 'GetRelatedProducts';\n    // if (this.platform.is(\"android\")) {\n    // const data = {\n    //   type,\n    // productid\n    // };\n    //   this.nativeHttp.setDataSerializer(\"json\");\n    //   let nativeCall = this.nativeHttp.get(url, data, { \"Content-Type\": \"application/json\" });\n    //   return from(nativeCall).pipe(\n    //     map(result => {\n    // if(result.code === 200){\n    //       return JSON.parse(result.data);\n    //     })\n    //   )\n    // } else {\n    const data = JSON.stringify({ type, productid });\n    return this.http.post<ResponseType>(url, data).pipe(\n      map(res => {\n        return res;\n      })\n    );\n    // }\n  }\n\n\n\n  AddOption(option, productid, price, quantity, action): Observable<ResponseType> {\n    const url = environment.url + 'MProductServlet';\n    const type = 'AddOption';\n    const sid = this.authService.currentUserDataValue.sid;\n    // if (this.platform.is(\"android\")) {\n    // const data = {\n    //   type,\n    // productid\n    // };\n    //   this.nativeHttp.setDataSerializer(\"json\");\n    //   let nativeCall = this.nativeHttp.get(url, data, { \"Content-Type\": \"application/json\" });\n    //   return from(nativeCall).pipe(\n    //     map(result => {\n    // if(result.code === 200){\n    //       return JSON.parse(result.data);\n    //     })\n    //   )\n    // } else {\n    const data = JSON.stringify({ type, sid, option, productid, price, quantity, action });\n    return this.http.post<ResponseType>(url, data).pipe(\n      map(res => {\n        return res;\n      })\n    );\n    // }\n  }\n  CartDiscountCode(code): Observable<ResponseType> {\n    const url = environment.url + 'MProductServlet';\n    const type = 'CartDiscountCode';\n    const sid = this.authService.currentUserDataValue.sid;\n    // if (this.platform.is(\"android\")) {\n    // const data = {\n    //   type,\n    // code\n    //sid\n    // };\n    //   this.nativeHttp.setDataSerializer(\"json\");\n    //   let nativeCall = this.nativeHttp.get(url, data, { \"Content-Type\": \"application/json\" });\n    //   return from(nativeCall).pipe(\n    //     map(result => {\n    // if(result.code === 200){\n    //       return JSON.parse(result.data);\n    //     })\n    //   )\n    // } else {\n    const data = JSON.stringify({ type, sid, code });\n    return this.http.post<ResponseType>(url, data).pipe(\n      map(res => {\n        return res;\n      })\n    );\n    // }\n  }\n\n  UpdateOption(option, productid, price, quantity, action): Observable<ResponseType> {\n    const url = environment.url + 'MProductServlet';\n    const type = 'UpdateOptions';\n    const sid = this.authService.currentUserDataValue.sid;\n    // if (this.platform.is(\"android\")) {\n    // const data = {\n    //   type,\n    // productid\n    // };\n    //   this.nativeHttp.setDataSerializer(\"json\");\n    //   let nativeCall = this.nativeHttp.get(url, data, { \"Content-Type\": \"application/json\" });\n    //   return from(nativeCall).pipe(\n    //     map(result => {\n    // if(result.code === 200){\n    //       return JSON.parse(result.data);\n    //     })\n    //   )\n    // } else {\n    const data = JSON.stringify({ type, sid, option, productid, price, quantity, action });\n    return this.http.post<ResponseType>(url, data).pipe(\n      map(res => {\n        return res;\n      })\n    );\n    // }\n  }\n  DeleteOption(option, optionid, productid): Observable<ResponseType> {\n    const url = environment.url + 'MProductServlet';\n    const type = 'DeleteOptions';\n    // if (this.platform.is(\"android\")) {\n    // const data = {\n    //   type,\n    // optionid, productid\n    // };\n    //   this.nativeHttp.setDataSerializer(\"json\");\n    //   let nativeCall = this.nativeHttp.get(url, data, { \"Content-Type\": \"application/json\" });\n    //   return from(nativeCall).pipe(\n    //     map(result => {\n    // if(result.code === 200){\n    //       return JSON.parse(result.data);\n    //     })\n    //   )\n    // } else {\n    const data = JSON.stringify({ type, option, optionid, productid });\n    return this.http.post<ResponseType>(url, data).pipe(\n      map(res => {\n        return res;\n      })\n    );\n    // }\n  }\n\n  GetUserCart(sid): Observable<ResponseType> {\n    const url = environment.url + 'MProductServlet';\n    const type = 'GetShopCart';\n    // if (this.platform.is(\"android\")) {\n    // const data = {\n    //   type,\n    // sid\n    // };\n    //   this.nativeHttp.setDataSerializer(\"json\");\n    //   let nativeCall = this.nativeHttp.get(url, data, { \"Content-Type\": \"application/json\" });\n    //   return from(nativeCall).pipe(\n    //     map(result => {\n    // if(result.code === 200){\n    //       return JSON.parse(result.data);\n    //     })\n    //   )\n    // } else {\n    const data = JSON.stringify({ type, sid });\n    return this.http.post<ResponseType>(url, data).pipe(\n      map(res => {\n        return res;\n      })\n    );\n    // }\n  }\n}\n"],"sourceRoot":"webpack:///"}