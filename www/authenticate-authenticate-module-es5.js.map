{"version":3,"sources":["webpack:///src/app/authenticate/authenticate.page.html","webpack:///src/app/authenticate/authenticate-routing.module.ts","webpack:///src/app/authenticate/authenticate.module.ts","webpack:///src/app/authenticate/authenticate.page.scss","webpack:///src/app/authenticate/authenticate.page.ts","webpack:///src/app/authenticate/service/auth-service.service.ts"],"names":["routes","path","component","loadChildren","then","m","ForgotPageModule","RegisterPageModule","ResetPageModule","AuthenticatePageRoutingModule","imports","forChild","exports","AuthenticatePageModule","declarations","Browser","AuthenticatePage","authService","fun","data","loginForm","email","updateOn","validators","required","password","validateEmail","value","login","subscribe","res","console","log","navigate","presentToast","link","open","url","toolbarColor","selector","template","AuthServiceService","nativeHttp","platform","http","emailphone","ngrok","type","is","setDataSerializer","nativeCall","get","pipe","result","JSON","parse","stringify","post","providedIn"],"mappings":"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","file":"authenticate-authenticate-module-es5.js","sourcesContent":["export default \"<ion-header ion-padding color=\\\"mytheme\\\" class=\\\"mybg head\\\">\\n  <ion-toolbar color=\\\"mytheme\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-buttons>\\n        <ion-menu-button color=\\\"light\\\"></ion-menu-button>\\n      </ion-buttons>\\n    </ion-buttons>\\n    <ion-title color=\\\"light\\\">Sign In</ion-title>\\n  </ion-toolbar>\\n  <ion-row class=\\\"ion-justify-content-center\\\">\\n    <ion-img src=\\\"assets/images/fyngram.png\\\" class=\\\"ion-justify-content-center head-image\\\"></ion-img>\\n  </ion-row>\\n</ion-header>\\n<ion-content ion-padding>\\n  <ion-text>\\n    <h3 class=\\\"title ion-no-margin ion-margin-bottom ion-margin-top ion-text-center\\\">Returning Customer</h3>\\n  </ion-text>\\n  <form [formGroup]=\\\"loginForm\\\">\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col>\\n          <ion-input clearInput type=\\\"email\\\" placeholder=\\\"Email\\\" name=\\\"email\\\" formControlName=\\\"email\\\"\\n            class=\\\"input ion-padding-horizontal\\\">\\n          </ion-input>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col>\\n          <ion-input clearInput type=\\\"password\\\" placeholder=\\\"Password\\\" name=\\\"password\\\" formControlName=\\\"password\\\"\\n            class=\\\"input ion-padding-horizontal\\\"></ion-input>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col>\\n          <ion-text float-end color=\\\"mytheme\\\" (click)=\\\"onOpen('authenticate/forgot')\\\">\\n            <h6 class=\\\"small ion-no-margin ion-text-end\\\">Forgot Password?</h6>\\n          </ion-text>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row class=\\\"ion-margin-bottom\\\">\\n        <ion-col>\\n          <ion-button expand=\\\"block\\\" (click)=\\\"signin()\\\" color=\\\"mytheme\\\"><strong class=\\\"white\\\">Sign In</strong>\\n          </ion-button>\\n        </ion-col>\\n      </ion-row>\\n      <div class=\\\"line ion-margin\\\"></div>\\n      <ion-row class=\\\"ion-margin-top\\\">\\n        <ion-col>\\n          <ion-button expand=\\\"block\\\" fill=\\\"outline\\\" (click)=\\\"onOpen('authenticate/register')\\\" color=\\\"mytheme\\\">\\n            <strong>New? Create an Account</strong></ion-button>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col>\\n          <ion-text class=\\\"ion-text-center ion-margin-top\\\">\\n            <h6 class=\\\"small ion-no-margin \\\">\\n              <a (click)=\\\"openLink('https://fyngram.com/FynGramShop/pages/shop/terms/terms.jsp')\\\"><strong>Terms of Use</strong></a>\\n              <span style=\\\"color: gray !important;\\\"> and </span>\\n              <a (click)=\\\"openLink('https://fyngram.com/FynGramShop/pages/shop/privacy/privacy.jsp')\\\"><strong>Privacy Policy</strong></a>\\n            </h6>\\n          </ion-text>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthenticatePage } from './authenticate.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthenticatePage\n  },\n  {\n    path: 'forgot',\n    loadChildren: () => import('./forgot/forgot.module').then( m => m.ForgotPageModule)\n  },\n  {\n    path: 'register',\n    loadChildren: () => import('./register/register.module').then( m => m.RegisterPageModule)\n  },\n  {\n    path: 'reset',\n    loadChildren: () => import('./reset/reset.module').then( m => m.ResetPageModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthenticatePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AuthenticatePageRoutingModule } from './authenticate-routing.module';\n\nimport { AuthenticatePage } from './authenticate.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    IonicModule,\n    AuthenticatePageRoutingModule\n  ],\n  declarations: [AuthenticatePage]\n})\nexport class AuthenticatePageModule {}\n","export default \".header-ios ion-toolbar:last-of-type {\\n  --border-width: 0 0 0 0;\\n}\\n\\n.head-image {\\n  background-size: contain;\\n  width: 180px;\\n  align-self: center;\\n  margin-bottom: 2em;\\n}\\n\\n.input {\\n  background-color: #f0f0f0;\\n  border: 1px solid #d2d2d2;\\n  border-radius: 9px;\\n  font-size: 0.9em !important;\\n}\\n\\n.white {\\n  color: white;\\n}\\n\\n.title {\\n  font-size: 18px;\\n}\\n\\n.small {\\n  font-size: 13px;\\n}\\n\\n.small a {\\n  text-decoration: unset !important;\\n  color: var(--ion-color-mytheme);\\n}\\n\\n.button-color {\\n  background-color: var(--ion-color-mytheme);\\n}\\n\\n.logo {\\n  width: 1.25em !important;\\n}\\n\\n:host(.button-solid) {\\n  --background: var(--ion-color-mytheme, #40A944);\\n  --color: var(--ion-color-primary-contrast, #fff);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aGVudGljYXRlL2F1dGhlbnRpY2F0ZS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDSSx1QkFBQTtBQUFKOztBQUVBO0VBQ0ksd0JBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxrQkFBQTtBQUNKOztBQUNBO0VBQ0kseUJBQUE7RUFDQSx5QkFBQTtFQUNBLGtCQUFBO0VBQ0EsMkJBQUE7QUFFSjs7QUFBQTtFQUNJLFlBQUE7QUFHSjs7QUFEQTtFQUNJLGVBQUE7QUFJSjs7QUFGQTtFQUNJLGVBQUE7QUFLSjs7QUFKSTtFQUNJLGlDQUFBO0VBQ0EsK0JBQUE7QUFNUjs7QUFIQTtFQUNJLDBDQUFBO0FBTUo7O0FBSkE7RUFDSSx3QkFBQTtBQU9KOztBQUxBO0VBQ0ksK0NBQUE7RUFDQSxnREFBQTtBQVFKIiwiZmlsZSI6InNyYy9hcHAvYXV0aGVudGljYXRlL2F1dGhlbnRpY2F0ZS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbi5oZWFkZXItaW9zIGlvbi10b29sYmFyOmxhc3Qtb2YtdHlwZSB7XG4gICAgLS1ib3JkZXItd2lkdGg6IDAgMCAwIDA7XG59XG4uaGVhZC1pbWFnZSB7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xuICAgIHdpZHRoOiAxODBweDtcbiAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XG4gICAgbWFyZ2luLWJvdHRvbTogMmVtO1xufVxuLmlucHV0IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjQwLCAyNDAsIDI0MCk7XG4gICAgYm9yZGVyOiAxcHggc29saWQgcmdiKDIxMCwgMjEwLCAyMTApO1xuICAgIGJvcmRlci1yYWRpdXM6IDlweDtcbiAgICBmb250LXNpemU6IC45ZW0gIWltcG9ydGFudDtcbn1cbi53aGl0ZXtcbiAgICBjb2xvcjogd2hpdGU7XG59XG4udGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMThweDtcbn1cbi5zbWFsbCB7XG4gICAgZm9udC1zaXplOiAxM3B4O1xuICAgIGF7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5zZXQgIWltcG9ydGFudDtcbiAgICAgICAgY29sb3IgOiB2YXIoLS1pb24tY29sb3ItbXl0aGVtZSk7XG4gICAgfVxufVxuLmJ1dHRvbi1jb2xvciB7XG4gICAgYmFja2dyb3VuZC1jb2xvciA6IHZhcigtLWlvbi1jb2xvci1teXRoZW1lKTtcbn1cbi5sb2dvIHtcbiAgICB3aWR0aDogMS4yNWVtICFpbXBvcnRhbnQ7XG59XG46aG9zdCguYnV0dG9uLXNvbGlkKSB7XG4gICAgLS1iYWNrZ3JvdW5kOiB2YXIoLS1pb24tY29sb3ItbXl0aGVtZSwgIzQwQTk0NCk7XG4gICAgLS1jb2xvcjogdmFyKC0taW9uLWNvbG9yLXByaW1hcnktY29udHJhc3QsICNmZmYpO1xufSJdfQ== */\";","import { AuthServiceService } from './service/auth-service.service';\nimport { DatalinkService } from './../datalink.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { DataService } from './../data.service';\nimport { FunctionsService } from './../functions.service';\nimport { Platform } from '@ionic/angular';\nimport { Component, OnInit } from '@angular/core';\nimport { Plugins } from '@capacitor/core';\nconst { Browser } = Plugins;\n@Component({\n  selector: 'app-authenticate',\n  templateUrl: './authenticate.page.html',\n  styleUrls: ['./authenticate.page.scss'],\n})\nexport class AuthenticatePage implements OnInit {\n\n  loginForm: FormGroup;\n\n  constructor(\n    private authService: AuthServiceService,\n    private fun: FunctionsService,\n    private data: DataService) {\n    this.loginForm = new FormGroup({\n      email: new FormControl(null,\n        { updateOn: 'blur', validators: [Validators.required] }),\n      password: new FormControl(null,\n        { updateOn: 'blur', validators: [Validators.required] }),\n    });\n  }\n\n  ngOnInit() {\n  }\n\n\n  signin() {\n    if (this.fun.validateEmail(this.loginForm.value.email) && this.loginForm.value.password !== '') {\n      this.authService.login(this.loginForm.value.email, this.loginForm.value.password)\n      .subscribe(res => {\n        console.log(res);\n      })\n\n      this.fun.navigate('home', false);\n    } else {\n      this.fun.presentToast('Wrong Input!', true, 'bottom', 2100);\n    }\n\n  }\n\n  async openLink(link) {\n    console.log(link);\n    await Browser.open(\n      {\n        url: link,\n        toolbarColor: \"#40A944\"\n      }\n      );\n  }\n\n  onOpen(link){\n    this.fun.navigate(link, true);\n  }\n\n}\n","import { environment } from './../../../environments/environment';\nimport { Platform } from '@ionic/angular';\nimport { Injectable } from '@angular/core';\nimport { HTTP } from '@ionic-native/http/ngx';\nimport { HttpClient } from \"@angular/common/http\";\nimport { map } from \"rxjs/operators\";\nimport { from } from \"rxjs\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthServiceService {\n\n  constructor(private nativeHttp: HTTP,\n    private platform: Platform,\n    public http: HttpClient, ) { }\n\n\n  login(emailphone, password) {\n    let url = environment.ngrok + \"MUserServlet\";\n    let type = \"Login\";\n    if (this.platform.is(\"android\")) {\n      let data = {\n        emailphone: emailphone,\n        password: password,\n        type: type\n      };\n      this.nativeHttp.setDataSerializer(\"json\");\n      let nativeCall = this.nativeHttp.get(url, data, { \"Content-Type\": \"application/json\" });\n      return from(nativeCall).pipe(\n        map(result => {\n          return JSON.parse(result.data);\n        })\n      )\n    } else {\n      let data = JSON.stringify({ emailphone, password, type });\n      return this.http.post(url, data).pipe(\n        map(res => {\n          return res;\n        })\n      );\n    }\n  }\n}\n"]}