{"version":3,"sources":["webpack:///src/app/authenticate/validate/validate.page.html","webpack:///src/app/authenticate/validate/validate-routing.module.ts","webpack:///src/app/authenticate/validate/validate.module.ts","webpack:///src/app/authenticate/validate/validate.page.scss","webpack:///src/app/authenticate/validate/validate.page.ts"],"names":["routes","path","component","ValidatePageRoutingModule","imports","forChild","exports","ValidatePageModule","declarations","Storage","ValidatePage","fun","authService","loadingCtrl","HAS_LOGGED_IN","validateForm","code","updateOn","validators","required","minLength","valid","presentToast","create","cssClass","message","mode","loading","present","ValidateAccount","value","subscribe","res","dismiss","oldsid","currentUserDataValue","sid","login","data","email","password","gotoHomePage","error","set","key","name","type","usertype","navigate","event","CustomEvent","detail","window","dispatchEvent","selector","template"],"mappings":"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","file":"validate-validate-module-es5.js","sourcesContent":["export default \"<ion-header ion-padding color=\\\"mytheme\\\" class=\\\"mybg head\\\">\\n  <ion-toolbar color=\\\"mytheme\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button color=\\\"light\\\"></ion-back-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n  <ion-row class=\\\"ion-justify-content-center\\\">\\n    <ion-img src=\\\"assets/images/fyngram.png\\\" class=\\\"head-image\\\"></ion-img>\\n  </ion-row>\\n</ion-header>\\n\\n<ion-content ion-padding>\\n  <ion-text>\\n    <h3 class=\\\"title ion-no-margin ion-margin-bottom ion-margin-top ion-text-center\\\">Account Validation</h3>\\n  </ion-text>\\n  <form [formGroup]=\\\"validateForm\\\">\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col>\\n          <ion-label>\\n            <ion-text class=\\\"small\\\">Type your verification code</ion-text>\\n          </ion-label>\\n          <ion-input clearInput type=\\\"text\\\" placeholder=\\\"Verification Code\\\" formControlName=\\\"code\\\"\\n            class=\\\"input ion-padding-horizontal\\\"></ion-input>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col>\\n          <ion-button expand=\\\"block\\\" (click)=\\\"onSubmit()\\\" [disabled]=\\\"!validateForm.valid\\\" color=\\\"mytheme\\\"><strong\\n              class=\\\"white\\\">Submit</strong></ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ValidatePage } from './validate.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ValidatePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ValidatePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ValidatePageRoutingModule } from './validate-routing.module';\n\nimport { ValidatePage } from './validate.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    IonicModule,\n    ValidatePageRoutingModule\n  ],\n  declarations: [ValidatePage]\n})\nexport class ValidatePageModule {}\n","export default \".header-ios ion-toolbar:last-of-type {\\n  --border-width: 0 0 0 0;\\n}\\n\\n.head-image {\\n  background-size: contain;\\n  width: 180px;\\n  align-self: center;\\n  margin-bottom: 2em;\\n}\\n\\n.small a {\\n  font-size: 13px;\\n  text-decoration: unset !important;\\n}\\n\\n.input {\\n  border: 1px solid #d2d2d2;\\n  border-radius: 9px;\\n  font-size: 0.9em !important;\\n}\\n\\n.white {\\n  color: white;\\n}\\n\\n.title {\\n  font-size: 18px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aGVudGljYXRlL3ZhbGlkYXRlL3ZhbGlkYXRlLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHVCQUFBO0FBQ0o7O0FBQ0E7RUFDSSx3QkFBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLGtCQUFBO0FBRUo7O0FBQ0k7RUFDSSxlQUFBO0VBQ0EsaUNBQUE7QUFFUjs7QUFDQTtFQUVJLHlCQUFBO0VBQ0Esa0JBQUE7RUFDQSwyQkFBQTtBQUNKOztBQUNBO0VBQ0ksWUFBQTtBQUVKOztBQUFBO0VBQ0ksZUFBQTtBQUdKIiwiZmlsZSI6InNyYy9hcHAvYXV0aGVudGljYXRlL3ZhbGlkYXRlL3ZhbGlkYXRlLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5oZWFkZXItaW9zIGlvbi10b29sYmFyOmxhc3Qtb2YtdHlwZSB7XG4gICAgLS1ib3JkZXItd2lkdGg6IDAgMCAwIDA7XG59XG4uaGVhZC1pbWFnZSB7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xuICAgIHdpZHRoOiAxODBweDtcbiAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XG4gICAgbWFyZ2luLWJvdHRvbTogMmVtO1xufVxuLnNtYWxsIHtcbiAgICBhe1xuICAgICAgICBmb250LXNpemU6IDEzcHg7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5zZXQgIWltcG9ydGFudDtcbiAgICB9XG59XG4uaW5wdXQge1xuICAgIC8vIGJhY2tncm91bmQtY29sb3I6IHJnYigyNDAsIDI0MCwgMjQwKTtcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZ2IoMjEwLCAyMTAsIDIxMCk7XG4gICAgYm9yZGVyLXJhZGl1czogOXB4O1xuICAgIGZvbnQtc2l6ZTogLjllbSAhaW1wb3J0YW50O1xufVxuLndoaXRle1xuICAgIGNvbG9yOiB3aGl0ZTtcbn1cbi50aXRsZSB7XG4gICAgZm9udC1zaXplOiAxOHB4O1xufSJdfQ== */\";","import { FunctionsService } from './../../services/functions.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { LoadingController } from '@ionic/angular';\nimport { AuthServiceService } from './../service/auth-service.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Plugins } from '@capacitor/core';\nconst { Storage } = Plugins;\n@Component({\n  selector: 'app-validate',\n  templateUrl: './validate.page.html',\n  styleUrls: ['./validate.page.scss'],\n})\nexport class ValidatePage implements OnInit {\n  validateForm: FormGroup;\n  HAS_LOGGED_IN = 'hasLoggedIn';\n  constructor(private fun: FunctionsService,\n              private authService: AuthServiceService,\n              private loadingCtrl: LoadingController) {\n    this.validateForm = new FormGroup({\n      code: new FormControl(null, { updateOn: 'blur', validators: [Validators.required, Validators.minLength(6)] }),\n    })\n  }\n\n  ngOnInit() {\n  }\n\n\n  async onSubmit() {\n    if (!this.validateForm.valid) {\n      this.fun.presentToast('Wrong Input!');\n      return false;\n    }\n    const loading = await this.loadingCtrl.create({\n      cssClass: 'my-custom-class',\n      message: 'Please wait...',\n      mode:'ios'\n    });\n    await loading.present();\n    this.authService.ValidateAccount(this.validateForm.value.code)\n      .subscribe(res => {\n        loading.dismiss().catch(() => { });\n        if (res.code === 200) {\n          const oldsid = this.authService.currentUserDataValue.sid;\n          this.authService.login(res.data.email, res.data.password, oldsid)\n            .subscribe(res => {\n              loading.dismiss().catch(() => { });\n              if (res.code === 200) {\n                this.gotoHomePage(res.data);\n              }\n            }, error => {\n              loading.dismiss().catch(() => { });\n              this.fun.presentToast(error);\n            })\n        }\n      }, error => {\n        loading.dismiss().catch(() => { });\n        this.fun.presentToast(error);\n      })\n\n  }\n  gotoHomePage(data) {\n    Storage.set({ key: this.HAS_LOGGED_IN, value: 'true' });\n    const name = this.authService.currentUserDataValue.name;\n    const type = this.authService.currentUserDataValue.usertype;\n    this.fun.presentToast('Welcome ' + name);\n    this.fun.navigate('/home/tabs/buy', false);\n    const event = new CustomEvent('user:login', { detail: { name, type } });\n    return window.dispatchEvent(event);\n  }\n\n}\n"]}